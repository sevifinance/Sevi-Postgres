Source: postgresql-anonymizer
Section: database
Priority: optional
Maintainer: DALIBO SCOP <contact@dalibo.com>
Standards-Version: 1.1.1
Rules-Requires-Root: no
Build-Depends:  debhelper-compat (= 13), postgresql-all (>= 217~)
Homepage: https://labs.dalibo.com/postgresql_anonymizer
Vcs-Browser: https://gitlab.com/dalibo/postgresql_anonymizer
Vcs-Git: https://gitlab.com/dalibo/postgresql_anonymizer.git

Package: postgresql-10-anonymizer
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, postgresql-10,
 postgresql-contrib-10
Description: PostgreSQL extension to anonymize data
 postgresql_anonymizer is an extension to mask or replace personally
 identifiable information (PII) or commercially sensitive data from
 a PostgreSQL database.
 The project relies on a declarative approach of anonymization. This means
 we're using the PostgreSQL Data Definition Language (DDL) in order to specify
 the anonymization strategy inside the table definition itself.

Package: postgresql-11-anonymizer
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, postgresql-11,
 postgresql-contrib-11
Description: PostgreSQL extension to anonymize data
 postgresql_anonymizer is an extension to mask or replace personally
 identifiable information (PII) or commercially sensitive data from
 a PostgreSQL database.
 The project relies on a declarative approach of anonymization. This means
 we're using the PostgreSQL Data Definition Language (DDL) in order to specify
 the anonymization strategy inside the table definition itself.

Package: postgresql-12-anonymizer
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, postgresql-12,
 postgresql-contrib-12
Description: PostgreSQL extension to anonymize data
 postgresql_anonymizer is an extension to mask or replace personally
 identifiable information (PII) or commercially sensitive data from
 a PostgreSQL database.
 The project relies on a declarative approach of anonymization. This means
 we're using the PostgreSQL Data Definition Language (DDL) in order to specify
 the anonymization strategy inside the table definition itself.

Package: postgresql-13-anonymizer
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, postgresql-13,
 postgresql-contrib-13
Description: PostgreSQL extension to anonymize data
 postgresql_anonymizer is an extension to mask or replace personally
 identifiable information (PII) or commercially sensitive data from
 a PostgreSQL database.
 The project relies on a declarative approach of anonymization. This means
 we're using the PostgreSQL Data Definition Language (DDL) in order to specify
 the anonymization strategy inside the table definition itself.

Package: postgresql-14-anonymizer
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, postgresql-14,
 postgresql-contrib-14
Description: PostgreSQL extension to anonymize data
 postgresql_anonymizer is an extension to mask or replace personally
 identifiable information (PII) or commercially sensitive data from
 a PostgreSQL database.
 The project relies on a declarative approach of anonymization. This means
 we're using the PostgreSQL Data Definition Language (DDL) in order to specify
 the anonymization strategy inside the table definition itself.

Package: postgresql-15-anonymizer
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, postgresql-15,
 postgresql-contrib-15
Description: PostgreSQL extension to anonymize data
 postgresql_anonymizer is an extension to mask or replace personally
 identifiable information (PII) or commercially sensitive data from
 a PostgreSQL database.
 The project relies on a declarative approach of anonymization. This means
 we're using the PostgreSQL Data Definition Language (DDL) in order to specify
 the anonymization strategy inside the table definition itself.

Package: postgresql-16-anonymizer
Architecture: any
Depends: ${misc:Depends}, ${shlibs:Depends}, postgresql-16,
 postgresql-contrib-16
Description: PostgreSQL extension to anonymize data
 postgresql_anonymizer is an extension to mask or replace personally
 identifiable information (PII) or commercially sensitive data from
 a PostgreSQL database.
 The project relies on a declarative approach of anonymization. This means
 we're using the PostgreSQL Data Definition Language (DDL) in order to specify
 the anonymization strategy inside the table definition itself.
